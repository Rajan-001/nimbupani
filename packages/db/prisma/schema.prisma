// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model UserInfo{
  id Int @id @default(autoincrement()) @unique
  name String? 
  password String?
  createdAt DateTime @default(now())
  upadetAt DateTime @updatedAt
  email String? @unique
  provider String?
  role Role @default(USER)
  carts Cart?
  payments Payments[]
  order Orders[]
}

model Product{
  id Int @id @default(autoincrement())
  name String
  selling_price Int
  quantity Int
  rating Int
  cost_price Int
  description String
  image_url String @default("")
  cartItem CartItem[]

  OrderItems OrderItems[]
}

model Cart{
  id Int @id @default(autoincrement())
  userId Int @unique
  cartItem CartItem[]
  userCart UserInfo @relation(fields: [userId],references: [id])
  Order Orders[]
}
model CartItem{
  id Int @id @default(autoincrement())
  cartId Int 
  productId Int 
  
  quantity Int
  price Int
  cart Cart @relation(fields: [cartId],references: [id])
  product Product @relation(fields: [productId],references: [id])
  @@unique([cartId,productId])
}

enum Role{
  ADMIN
  USER
  GUEST
}

model Payments{
    id Int @id @default(autoincrement())
    Product_Cart_Id Int 
    User_Id Int @unique
    orderId String @unique
    Payment_Status Status @default(pending)
  razorpay_payment_id String   @unique
  razorpay_signature String?
  paymentDate       DateTime  @default(now())
  razorpay_order_id String    @unique
    user UserInfo @relation(fields:[User_Id],references: [id])
    orders Orders @relation(fields: [orderId],references: [order_id])
}

model Orders{
  id Int @id @default(autoincrement())
  userId Int
  cartId Int
  orderDate DateTime @default(now())
  order_id String @unique
  status Status @default(created)
  totalAmount Int
  currency String
  recepient String
  orderItem  OrderItems[]
  user UserInfo @relation(fields: [userId], references: [id])
  cart Cart @relation(fields: [cartId], references: [id])
  payments Payments[]

}
model OrderItems{
  id Int @id @default(autoincrement())
  orderId Int 
  productId Int 
  quantity Int
  price Int
  cart Orders @relation(fields: [orderId],references: [id])
  product Product @relation(fields: [productId],references: [id])
  @@unique([orderId,productId])
}

enum Status{
  pending
  success
  failed
  created
  attempted
  paid
}
